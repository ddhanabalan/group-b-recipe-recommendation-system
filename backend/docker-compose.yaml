# version: '4.29'

# services:
#   redis:
#     image: "redis:alpine"
#     ports:
#       - "6379:6379"
#     networks:
#       - app_network

#   mysql_server:
#     build:
#       context: ./mysqldb
#       dockerfile: Dockerfile
#     restart: always
#     env_file:
#       - .env
#     environment:
#       - MYSQL_ROOT_PASSWORD=${ROOT_PASSWORD}
#       - MYSQL_DATABASE=${DATABASE} 
#       - MYSQL_USER=${USER}
#       - MYSQL_PASSWORD=${PASSWORD}
#     # ports:
#     #   - "3306:3306"
#     healthcheck:
#       test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "root_password", "-e", "SELECT 1"]
#       timeout: 10s
#       retries: 10
#     networks:
#       - app_network
#         # ipv4_address: 172.20.0.2

#   recipesystem:
#     build:
#       context: ./django
#       dockerfile: Dockerfile
#     # command: python manage.py runserver 0.0.0.0:8000
#     command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
#     restart: always
#     volumes:
#       - ./django:/app
#       - ./AIML:/app/AIML
#     ports:
#       - "8000:8000"
#     depends_on:
#       mysql_server:
#         condition: service_healthy
#     networks:
#       - app_network

#   celery-worker:
#     build: ./django
#     command: celery -A recipesystem worker --loglevel=info
#     volumes:
#       - ./django:/app
#       - ./AIML:/app/AIML
#     depends_on:
#       - recipesystem
#       - redis
#     networks:
#       - app_network

#   celery-beat:
#     build: ./django
#     command: celery -A recipesystem beat --loglevel=info
#     volumes:
#       - ./django:/app
#       - ./AIML:/app/AIML
#     depends_on:
#       - recipesystem
#       - redis
#     networks:
#       - app_network

# networks:
#   app_network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.20.0.0/16

version: '4.29'

services:

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network

  mysql_server:
    build:
      context: ./mysqldb
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_USER=${USER}
      - MYSQL_PASSWORD=${PASSWORD}
    networks:
      - app_network

  recipesystem:
    build:
      context: ./django
      dockerfile: Dockerfile
    # command: sh -c "python manage.py makemigrations && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    # --noreload
    command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - ./django:/app
      - ./AIML:/app/AIML
    ports:
      - "8000:8000"
    depends_on:
      - mysql_server
      - redis
    networks:
      - app_network
    environment:
      - NLTK_DATA=/usr/share/nltk_data
    deploy:
      resources:
        limits:
          cpus: '3.50'
          memory: '3G'
        reservations:
          memory: '512M'

  celery_worker:
    build: ./django
    user: celeryuser
    command: celery -A recipesystem worker -l info -P gevent
    restart: always
    volumes:
      - ./django:/app
      - ./AIML:/app/AIML
    depends_on:
      - recipesystem
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2.50'
    #       memory: '2G'
    #     reservations:
    #       memory: '512M'
    networks:
      - app_network

  celery_beat:
    build: ./django
    user: celeryuser
    command: celery -A recipesystem beat -l info
    restart: always
    volumes:
      - ./django:/app
      - ./AIML:/app/AIML
    depends_on:
      - recipesystem
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
